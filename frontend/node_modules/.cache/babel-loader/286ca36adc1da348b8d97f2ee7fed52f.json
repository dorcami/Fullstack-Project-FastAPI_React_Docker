{"ast":null,"code":"var _jsxFileName = \"/Users/dorcami/Documents/Fullstack/My Work/Aisap/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// Imports\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DomainComp from './Domain'; // Main function for the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Variables (states) declaration\n  const [DB_Domains, setDB_Domains] = useState(\"\");\n  const [HostIP, setHostIP] = useState({});\n  const [domain_to_search, setDomain] = useState(\"\"); // Functions declaration\n  // Get all data from db\n\n  const getDBdata = async () => {\n    // let resp = await axios.get('http://0.0.0.0:8000/api/ips')\n    // setDB_Domains(resp.data)\n    setDB_Domains([{\n      \"domain\": \"asdfasdf\",\n      \"internal_ip\": \"12.12124\"\n    }]);\n  }; // Get host's local and public ip\n\n\n  const getHostIP = async () => {\n    let resp = await axios.get('http://0.0.0.0:8000/api/host');\n    setHostIP(resp.data);\n  }; //  Create an ip request for the entered domain and store it in the db\n\n\n  const searchForDomainsIP = async domain => {\n    let resp = await axios.post('http://0.0.0.0:8000/api/ips/', {\n      \"domain\": domain,\n      \"internal_ip\": \"\"\n    });\n    setDB_Domains([...DB_Domains, resp.data]);\n  };\n\n  function logthings(num) {\n    console.log(num);\n  } // const DeleteIP = async (domain) =>{\n  //   let resp = await axios.delete('http://0.0.0.0:8000/api/ips/'+domain)\n  //   console.log(domain)\n  //   console.log(resp)\n  //   }\n  // Run these functions only once, when the component initializes\n\n\n  useEffect(() => {\n    getDBdata();\n    getHostIP();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App list-group-item justify-content-center align-items-center mx-auto\",\n      style: {\n        \"width\": \"400px\",\n        backgroundColor: \"white\",\n        marginTop: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card text-white bg-primary mb-1\",\n        children: \"Fullstack challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), HostIP && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hostIP\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Your local IP is \", HostIP.local_ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Your public IP is \", HostIP.public_ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card text-white bg-dark mb-1\",\n        children: \"Add new domain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mb-2\",\n          placeholder: \"Domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary mx-2 mb-2\",\n          onClick: () => searchForDomainsIP(domain_to_search),\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), DB_Domains && DB_Domains.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(DomainComp, {\n        data: element,\n        action: logthings\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C+ckLo99IFC5k1HKWeiQ0Uai3n8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DomainComp","App","DB_Domains","setDB_Domains","HostIP","setHostIP","domain_to_search","setDomain","getDBdata","getHostIP","resp","get","data","searchForDomainsIP","domain","post","logthings","num","console","log","backgroundColor","marginTop","local_ip","public_ip","e","target","value","map","element","index"],"sources":["/Users/dorcami/Documents/Fullstack/My Work/Aisap/frontend/src/App.js"],"sourcesContent":["// Imports\nimport './App.css';\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport DomainComp from './Domain';\n\n// Main function for the component\nfunction App() {\n\n  // Variables (states) declaration\n  const [DB_Domains, setDB_Domains] = useState(\"\")\n  const [HostIP, setHostIP] = useState({})\n  const [domain_to_search, setDomain] = useState(\"\")\n  \n  // Functions declaration\n  \n  // Get all data from db\n  const getDBdata = async () =>{\n    // let resp = await axios.get('http://0.0.0.0:8000/api/ips')\n    // setDB_Domains(resp.data)\n    setDB_Domains([{\"domain\": \"asdfasdf\", \"internal_ip\": \"12.12124\"}])\n    }\n\n  // Get host's local and public ip\n  const getHostIP = async () =>{\n    let resp = await axios.get('http://0.0.0.0:8000/api/host')\n    setHostIP(resp.data)\n    }\n  \n  //  Create an ip request for the entered domain and store it in the db\n  const searchForDomainsIP = async (domain) => {\n    let resp = await axios.post('http://0.0.0.0:8000/api/ips/',{\n      \"domain\": domain,\n      \"internal_ip\": \"\"\n    })\n    setDB_Domains([...DB_Domains, resp.data])\n  }\n\n  function logthings(num){\n    console.log(num)\n  }\n\n  // const DeleteIP = async (domain) =>{\n  //   let resp = await axios.delete('http://0.0.0.0:8000/api/ips/'+domain)\n  //   console.log(domain)\n  //   console.log(resp)\n  //   }\n\n  // Run these functions only once, when the component initializes\n  useEffect(() => {\n    getDBdata()\n    getHostIP()\n  },[])\n\n\n  return (\n    <div className=\"App container\">\n      <div className=\"App list-group-item justify-content-center align-items-center mx-auto\" style={{\"width\": \"400px\", backgroundColor: \"white\", marginTop: \"15px\"}}>\n        <h1 className=\"card text-white bg-primary mb-1\">Fullstack challenge</h1>\n        {\n          HostIP && (\n            <div className='hostIP'>\n            <h5>Your local IP is {HostIP.local_ip}</h5>\n            <h5>Your public IP is {HostIP.public_ip}</h5>\n            </div>\n          )\n        }\n        <h5 className=\"card text-white bg-dark mb-1\">Add new domain</h5>\n        <span className=\"card-text\">\n          <input className=\"form-control mb-2\" placeholder=\"Domain\" onChange={(e) => setDomain(e.target.value)}/>\n          <button className=\"btn btn-outline-primary mx-2 mb-2\" onClick={() => searchForDomainsIP(domain_to_search)}>\n            Enter\n          </button>\n        </span>\n\n      </div>\n      {\n        DB_Domains && (DB_Domains.map((element, index) => {\n          return <DomainComp key={index} data={element} action={logthings}/>\n        }))\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}